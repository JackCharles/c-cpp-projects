     1                                           ;代码清单13-3
     2                                           ;文件名：c13.asm
     3                                           ;文件说明：用户程序 
     4                                           ;创建日期：2011-10-30 15:19   
     5                                           
     6                                  ;===============================================================================
     7                                  SECTION header vstart=0
     8                                  
     9 00000000 [00000000]                       program_length   dd program_end          ;程序总长度#0x00
    10                                           
    11 00000004 [28030000]                       head_len         dd header_end           ;程序头部的长度#0x04，重定位后存储头部段选择子
    12                                  
    13 00000008 00000000                         stack_seg        dd 0                    ;用于接收堆栈段选择子#0x08,重定位后存储堆栈段选择子
    14 0000000C 01000000                         stack_len        dd 1                    ;程序建议的堆栈大小#0x0c
    15                                                                                    ;以4KB为单位
    16                                                                                    
    17 00000010 [00000000]                       prgentry         dd start                ;程序入口#0x10 
    18 00000014 [00000000]                       code_seg         dd section.code.start   ;代码段位置#0x14，重定位后存储代码段选择子
    19 00000018 [87000000]                       code_len         dd code_end             ;代码段长度#0x18
    20                                  
    21 0000001C [00000000]                       data_seg         dd section.data.start   ;数据段位置#0x1c，重定位后存储数据段选择子
    22 00000020 [20000000]                       data_len         dd data_end             ;数据段长度#0x20
    23                                               
    24                                  ;-------------------------------------------------------------------------------
    25                                           ;符号地址检索表
    26 00000024 03000000                         salt_items       dd (header_end-salt)/256 ;#0x24
    27                                           
    28                                           salt:                                     ;#0x28
    29 00000028 405072696E74537472-              PrintString      db  '@PrintString'       ;重定位后开始6字节存储的是偏移(4B)和公共例程段选择子(2B)
    29 00000031 696E67             
    30 00000034 00<rept>                                     times 256-($-PrintString) db 0
    31                                                       
    32 00000128 405465726D696E6174-              TerminateProgram db  '@TerminateProgram'
    32 00000131 6550726F6772616D   
    33 00000139 00<rept>                                     times 256-($-TerminateProgram) db 0
    34                                                       
    35 00000228 40526561644469736B-              ReadDiskData     db  '@ReadDiskData'
    35 00000231 44617461           
    36 00000235 00<rept>                                     times 256-($-ReadDiskData) db 0
    37                                                   
    38                                  header_end:
    39                                  
    40                                  ;===============================================================================
    41                                  SECTION data vstart=0    
    42 00000000 0D0A0D0A2020313521-              message	 db 0x0d,0x0a,0x0d,0x0a,'  15!= ',0
    42 00000009 3D2000             
    43 0000000C 00<rept>                	 buffer times 20 db 0
    44                                  data_end:
    45                                  
    46                                  ;===============================================================================
    47                                        [bits 32]
    48                                  ;===============================================================================
    49                                  SECTION code vstart=0
    50                                  start:
    51 00000000 8CD8                             mov eax,ds
    52 00000002 8EE0                             mov fs,eax               ;fs<-头部选择子
    53                                       
    54 00000004 A1[08000000]                     mov eax,[stack_seg]
    55 00000009 8ED0                             mov ss,eax               ;ss<-栈段
    56 0000000B BC00000000                       mov esp,0
    57                                       
    58 00000010 A1[1C000000]                     mov eax,[data_seg]
    59 00000015 8ED8                             mov ds,eax               ;ds<-数据段
    60                                  ;================================================================================        
    61 00000017 BF01000000                       mov edi,1                          ;阶乘数 
    62 0000001C B801000000                       mov eax,1
    63 00000021 31D2                             xor edx,edx
    64 00000023 31DB                    	 xor ebx,ebx
    65 00000025 31C9                    	 xor ecx,ecx
    66                                     mult:
    67                                           ;低32位相乘放在EBX:ECX中
    68 00000027 52                      	 push edx
    69 00000028 F7E7                    	 mul edi
    70 0000002A 89C1                    	 mov ecx,eax
    71 0000002C 89D3                    	 mov ebx,edx
    72                                  	 ;高32位相乘左移32位放到EDX:EAX中
    73 0000002E 58                      	 pop eax
    74 0000002F F7E7                    	 mul edi
    75 00000031 89C2                    	 mov edx,eax
    76 00000033 31C0                    	 xor eax,eax
    77                                  	 ;EDX:EAX + EBX:ECX -> EDX:EAX
    78 00000035 01C8                    	 add eax,ecx
    79 00000037 11DA                    	 adc edx,ebx
    80                                  		 
    81 00000039 47                      	 inc edi
    82 0000003A 83FF0F                  	 cmp edi,15
    83 0000003D 7EE8                             jle mult
    84                                           
    85                                   ;=============================================================================;        
    86                                  
    87 0000003F BF0C000000                       mov edi,12                      ;控制相除次数			    
    88                                     divi:
    89 00000044 B90A000000                       mov ecx,10                     ;设置除数 
    90 00000049 50                               push eax                       ;保存AX，32位的低16位 
    91 0000004A 89D0                             mov eax,edx
    92 0000004C 31D2                             xor edx,edx                     ;把DX扩展到DX:AX
    93 0000004E F7F1                             div ecx
    94 00000050 89C3                             mov ebx,eax                     ;保存高16位相除的商
    95 00000052 58                               pop eax                        ;恢复低16位，不动高16位相除的余数 
    96 00000053 F7F1                             div ecx
    97 00000055 88D1                             mov cl,dl                     ;保存真正余数到cx 
    98 00000057 89DA                             mov edx,ebx                     ;恢复高16位的商,与AX组成整个结果的商 
    99                                                                       ;DX:AX组成下一轮的被除数 
   100 00000059 80C130                           add cl,'0'
   101 0000005C 888F[0C000000]                   mov byte [buffer+edi],cl
   102 00000062 4F                               dec edi
   103 00000063 83FF00                           cmp edi,0
   104 00000066 7DDC                             jge divi
   105                                           
   106 00000068 BB[00000000]                     mov ebx,message
   107 0000006D 64FF1D[28000000]                 call far [fs:PrintString]          ;32位call far[addr]是从addr处取出一个32位偏移和16位段选择子
   108                                       
   109 00000074 BB[0C000000]                     mov ebx,buffer 
   110 00000079 64FF1D[28000000]                 call far [fs:PrintString]           
   111                                       
   112 00000080 64FF1D[28010000]                 call far [fs:TerminateProgram]       ;将控制权返回到系统 
   113                                        
   114                                  code_end:
   115                                  
   116                                  ;===============================================================================
   117                                  SECTION trail
   118                                  ;-------------------------------------------------------------------------------
   119                                  program_end:
